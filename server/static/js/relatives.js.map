{"version":3,"sources":["../../es6/relatives.js"],"names":[],"mappings":"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","file":"relatives.js","sourcesContent":["/**\n * This module implements the popups that show the relatives of a manuscript.\n *\n * @module relatives\n *\n * @author Marcello Perathoner\n */\n\ndefine ([\n    'jquery',\n    'lodash',\n    'tools',\n    'toolbar',\n    'css!relatives-css',\n],\n\nfunction ($, _, tools, toolbar) {\n    function changed () {\n        $ (document).trigger ('changed.ntg.relatives');\n    }\n\n    /**\n     * Load new data.\n     *\n     * Display new data in the popup after the user navigated to a different\n     * passage.\n     *\n     * @function load_passage\n     *\n     * @param {Object} passage - The new passage\n     *\n     * @return {Promise} Promise, resolved when the new passage has loaded.\n     */\n\n    function load_passage (passage) {\n        let instance = this;\n        // instance.data.passage = passage;\n\n        const params = ['type', 'range', 'limit', 'labez', 'mode', 'include', 'fragments'];\n\n        // replace content\n        let ms_id = instance.$panel.data ('ms-id');\n        let url   = 'relatives/' + passage.pass_id + '/id' + ms_id\n            + '?' + $.param (_.pick (instance.data, params)); // we must use GET, not POST\n        let p0 = $.get (url);\n        let p1 = toolbar.load_labez_dropdown (\n            instance.$toolbar.find ('div.toolbar-labez'), passage, 'labez',\n            [['all', 'All'], ['all+lac', 'All+Lac']], []);\n        let p2 = toolbar.load_range_dropdown (\n            instance.$toolbar.find ('div.toolbar-range'), passage, 'range',\n            [{ 'range' : 'This', 'value' : 'x' }], []);\n\n        p0.done ((html) => {\n            let $html = $ (html);\n            // replace inner div to keep close button etc.\n            let $caption_wrap = instance.$panel.find ('div.panel-relatives-caption div');\n            let $heading_wrap = instance.$panel.find ('div.panel-relatives-metrics');\n            let $table_wrap   = instance.$panel.find ('div.panel-relatives-content');\n            $caption_wrap.html ($html.find ('div.relatives-caption'));\n            $heading_wrap.html ($html.find ('div.relatives-metrics'));\n            $table_wrap.html   ($html.find ('table.relatives'));\n        });\n\n        return $.when (p0, p1, p2).done (() => {\n            toolbar.set_toolbar_buttons (instance.$toolbar, instance.data);\n            // Maybe we changed range while navigating.  Set a new range.\n            instance.$toolbar.find ('div.toolbar-range input[data-opt = \"x\"]')\n                .attr ('data-opt', passage.chapter);\n            changed ();\n        });\n    }\n\n    /**\n     * Position the popup panel relative to target.\n     *\n     * Target usually is the element that the user clicked to create the popup.\n     *\n     * @function position_popup\n     *\n     * @param {DOM} target    - A DOM element relative to which to position the popup.\n     */\n\n    function position_popup (target) {\n        let instance = this;\n\n        let rect = target.getBoundingClientRect ();\n        let bodyRect = document.body.getBoundingClientRect (); // account for scrolling\n        let event = new $.Event ('click');\n        event.pageY = rect.top  - bodyRect.top  + (rect.height / 2.0);\n        event.pageX = rect.left - bodyRect.left + (rect.width / 2.0);\n        instance.$panel.position ({\n            'my'        : 'center bottom-15',\n            'collision' : 'flipfit flip',\n            'of'        : event,\n        });\n    }\n\n    /**\n     * Initialize the module.\n     *\n     * @function init\n     *\n     * @param {Object} instance - The panel module instance to inherit from.\n     */\n\n    function init (instance) {\n        instance.load_passage = load_passage;\n        instance.position_popup = position_popup;\n        $.extend (instance.data, {\n            'type'      : 'rel',\n            'range'     : 'All',\n            'limit'     : '10',\n            'include'   : [],\n            'fragments' : [],\n            'mode'      : 'sim',\n            'labez'     : 'all+lac',\n        });\n        instance.$panel.on ('changed.panel.visibility', changed);\n\n        return instance;\n    }\n\n    return {\n        'init'         : init,\n        'changed'      : changed,\n    };\n});\n"]}