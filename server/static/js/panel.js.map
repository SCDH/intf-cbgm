{"version":3,"sources":["../../es6/panel.js"],"names":[],"mappings":"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","file":"panel.js","sourcesContent":["/**\n * This module is the base for a panel.  It implements the minimize/maximize\n * functionality and updates the panel only while it is open.\n *\n * @module panel\n *\n * @author Marcello Perathoner\n */\n\ndefine ([\n    'jquery',\n    'lodash',\n    'toolbar',\n    'bootstrap',\n    'css!panel-css',\n],\n\nfunction ($, _, toolbar) {\n    function on_maximizing_panel_visibility (event) {\n        var instance = event.data;\n\n        instance.visible = true;\n        if (instance.dirty) {\n            instance.dirty = false;\n            instance.load_passage (instance.data.passage);\n        }\n    }\n\n    function on_minimizing_panel_visibility (event) {\n        var instance = event.data;\n\n        instance.visible = false;\n    }\n\n    /**\n     * Retrieve and display new gagdet content.\n     *\n     * @function load\n     *\n     * @param {Object} passage - Passage data\n     *\n     * @return {Promise} Promise, resolved when the new passage has loaded.\n     */\n\n    function load (passage) {\n        var instance = this;\n\n        instance.data.passage = passage;\n        if (instance.visible) {\n            return instance.load_passage (passage);\n        }\n        instance.dirty = true;\n        return $.Deferred ().resolve ().promise ();\n    }\n\n    /**\n     * Put min-max and close buttons onto panels.\n     *\n     * Put minimize and maximize buttons on panels that contain\n     * div.panel-slidable panes.  Put close buttons on panels that contain\n     * div.panel-closable panes.\n     *\n     * @function create_panel_controls\n     *\n     * @param {jQuery} $panels - The panel(s)\n     */\n\n    function create_panel_controls ($panels) {\n        $panels.each ((i, el) => {\n            var $panel = $ (el);\n            if ($panel.find ('div.panel-slidable').length > 0) {\n                $panel.find ('div.panel-caption').prepend (\n                    '<a class=\"close panel-minimize\"><span class=\"glyphicon glyphicon-collapse-up\"></span></a>' +\n                    '<a class=\"close panel-maximize\"><span class=\"glyphicon glyphicon-collapse-down\"></span></a>'\n                );\n            }\n            // append the buttons in inverse order because they float right\n            if ($panel.hasClass ('panel-closable')) {\n                $panel.find ('div.panel-caption').prepend (\n                    '<a class=\"close panel-close\"><span class=\"glyphicon glyphicon-remove\"></span></a>'\n                );\n            }\n        });\n    }\n\n    /**\n     * Setup the minimize, maximize, and close button event handlers.\n     *\n     * @function setup_button_event_handlers\n     */\n\n    function setup_button_event_handlers () {\n        // Click on minimize icon\n        $ (document).on ('click', 'a.panel-minimize', function (event) {\n            var $this = $ (this);\n            var $panel = $this.closest ('div.panel');\n            $panel.trigger ('minimizing.panel.visibility');\n            $panel.find ('.panel-slidable').slideUp (() => {\n                $panel.trigger ('minimized.panel.visibility');\n                $panel.trigger ('changed.panel.visibility');\n            });\n            event.stopPropagation ();\n        });\n\n        // Click on maximize icon\n        $ (document).on ('click', 'a.panel-maximize', function (event) {\n            var $this = $ (this);\n            var $panel = $this.closest ('div.panel');\n            $panel.trigger ('maximizing.panel.visibility');\n            $panel.find ('.panel-slidable').slideDown (() => {\n                $panel.trigger ('maximized.panel.visibility');\n                $panel.trigger ('changed.panel.visibility');\n            });\n            event.stopPropagation ();\n        });\n\n        // Click on close icon\n        $ (document).on ('click', 'a.panel-close', function (event) {\n            var $this = $ (this);\n            var $panel = $this.closest ('div.panel');\n            $panel.trigger ('closing.panel.visibility');\n            $panel.fadeOut (() => {\n                $panel.trigger ('closed.panel.visibility');\n                $panel.trigger ('changed.panel.visibility');\n                $panel.remove ();\n            });\n            event.stopPropagation ();\n        });\n    }\n\n    /**\n     * Initialize the module.\n     *\n     * @function init\n     *\n     * @param {Object} $panel - The panel element.\n     *\n     * @returns {Object} The module instance object.\n     */\n\n    function init ($panel) {\n        var instance = {};\n        instance.load     = load;\n        instance.visible  = true;\n        instance.dirty    = true;\n        instance.data     = {};\n\n        instance.$panel   = $panel;\n        toolbar.init (instance, $panel.find ('div.toolbar'));\n\n        // The user navigated to a new passage.\n        instance.$panel.on ('ntg.panel.reload', (event, passage) => {\n            // NB. this closure keeps instance alive!  That is important for the\n            // relatives popup.\n            instance.load (passage);\n            event.stopPropagation ();\n        });\n\n        setup_button_event_handlers ();\n\n        // Answer maximizing / minimizing\n        instance.$panel.on ('maximizing.panel.visibility', instance, on_maximizing_panel_visibility);\n        instance.$panel.on ('minimizing.panel.visibility', instance, on_minimizing_panel_visibility);\n\n        return instance;\n    }\n\n    return {\n        'init'                  : init,\n        'create_panel_controls' : create_panel_controls,\n    };\n});\n"]}