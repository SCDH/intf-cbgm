{"version":3,"sources":["../../es6/local-stemma.js"],"names":[],"mappings":"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","file":"local-stemma.js","sourcesContent":["/**\n * This module implements the local stemma drag-and-drop editing.\n *\n * @module local-stemma\n * @author Marcello Perathoner\n */\n\ndefine ([\n    'jquery',\n    'lodash',\n    'd3',\n    'tools',\n],\n\nfunction ($, _, d3, tools) {\n    function changed () {\n        // currently unused\n        $ (document).trigger ('changed.ntg.local-stemma');\n    }\n\n    /** @var {D3selector} dragged_node - The node being dragged or null */\n    let dragged_node = null;\n    /** @var {D3selector} target_node  - The node under the node being dragged or null */\n    let target_node  = null;\n\n    /**\n     * Moves the node back to the original position.\n     *\n     * If the user drops the node 'nowhere' then this function slides the node\n     * back to the original position.\n     *\n     * @see: https://github.com/d3/d3-transition#transition_attrTween\n     *\n     * @function return_to_base\n     *\n     * @param {Object} node - The node to slide back.\n     */\n\n    function return_to_base (node) {\n        if (node !== null) {\n            let t = d3.transition ().duration (500).ease (d3.easeLinear);\n            node.transition (t).attrTween ('transform', function (d, dummy_i, dummy_a)  {\n                let delta_x = d.pos.x - d.pos.orig_x;\n                let delta_y = d.pos.y - d.pos.orig_y;\n                d.pos.x = d.pos.orig_x;\n                d.pos.y = d.pos.orig_y;\n                return function (tt) {\n                    let x = d.pos.x + ((1.0 - tt) * delta_x);\n                    let y = d.pos.y + ((1.0 - tt) * delta_y);\n                    return 'translate(' + x + ',' + y + ')';\n                };\n            });\n        }\n    }\n\n    /**\n     * Highlight or unhighlight a node\n     *\n     * @function highlight\n     *\n     * @param {Object} node - The node to highlight\n     * @param {bool} b      - Whether to highlight or unhighlight\n     */\n\n    function highlight (node, b) {\n        if (node) {\n            node.classed ('highlight', b);\n        }\n    }\n\n    /**\n     * Drag and drop handler\n     *\n     * Creates a d3-drag object that implements the drag-and-drop local stemma\n     * editor.\n     *\n     * @function dragListener\n     *\n     * @param {Object} instance - The instance\n     */\n\n    function dragListener (instance) {\n        let $panel  = instance.$wrapper;\n        let passage = instance.passage;\n\n        return d3.drag ()\n            .on ('start', function (dummy_d) {\n                // do nothing (yet)\n            })\n            .on ('drag', function (d) {\n                if (dragged_node === null) {\n                    dragged_node = d3.select (this);\n                    d.pos.orig_x = d.pos.x;\n                    d.pos.orig_y = d.pos.y;\n                    // Suppress the mouseover event on the node being dragged\n                    // otherwise it will absorb the event and the underlying\n                    // node will not get it.\n                    dragged_node.attr ('pointer-events', 'none');\n                    dragged_node.raise ();\n                    target_node = null;\n                    // console.log ('dragging ' + dragged_node.datum ().label);\n                }\n                d.pos.x += d3.event.dx;\n                d.pos.y += d3.event.dy;\n                dragged_node.attr ('transform', 'translate(' + d.pos.x + ',' + d.pos.y + ')');\n                // console.log (d3.event.shiftKey ? 'shift' : 'unshift');\n            })\n            .on ('end', function (dummy_d) {\n                let dragged_node_ref = dragged_node;\n                if (target_node) {\n                    // if dropped on another node, the default action is to\n                    // move, but if the shift key was held down, the action will\n                    // be to merge or to split\n                    let action = 'move';\n                    if (d3.event.sourceEvent.shiftKey) {\n                        action = (dragged_node.datum ().labez === target_node.datum ().labez)\n                            ? 'merge' : 'split';\n                    }\n                    let xhr = $.getJSON ('stemma-edit/' + passage.pass_id, {\n                        'action'     : action,\n                        'labez_old'  : dragged_node.datum ().labez,\n                        'clique_old' : dragged_node.datum ().clique,\n                        'labez_new'  : target_node.datum ().labez,\n                        'clique_new' : target_node.datum ().clique,\n                    });\n                    xhr.done ((json) => {\n                        // stemma-edit returns the changed passage\n                        $ (document).trigger ('ntg.panel.reload', json.data);\n                    });\n                    xhr.fail ((xhrobj) => {\n                        tools.xhr_alert (xhrobj, $panel);\n                        return_to_base (dragged_node_ref);\n                    });\n                    highlight (target_node, false);\n                } else {\n                    // if dropped in no man's land\n                    return_to_base (dragged_node_ref);\n                }\n                if (dragged_node !== null) {\n                    dragged_node.attr ('pointer-events', 'auto');\n                }\n                dragged_node = null;\n                target_node = null;\n            });\n    }\n\n    /**\n     * Output one menu item\n     *\n     * @function trow\n     *\n     * @param {Object} data - A dictionary\n     *\n     * @returns {jQuery} The table row object.\n     */\n\n    function trow (data) {\n        return $ (tools.format (\n            '<tr data-action=\"{action}\" data-labez_old=\"{labez_old}\" data-clique_old=\"{clique_old}\" ' +\n                'data-labez_new=\"{labez_new}\" data-clique_new=\"{clique_new}\">' +\n                '<td class=\"bg_labez\" data-labez=\"{labez_bg}\"></td>' +\n                '<td>{msg}</td>' +\n                '</tr>',\n            data\n        ));\n    }\n\n    /**\n     * Implements the context menu.\n     *\n     * The context menu can be used to split the attestation, reassign source\n     * nodes or to merge a split.\n     *\n     * @function open_contextmenu\n     *\n     * @param {Object} event - The event\n     */\n\n    function open_contextmenu (event) {\n        event.preventDefault ();\n\n        let passage = event.data.passage;\n        let xhr = $.getJSON ('cliques.json/' + passage.pass_id);\n        xhr.done ((json) => {\n            let dataset = event.target.dataset;\n            let data = {\n                'labez_old'  : dataset.labez,\n                'clique_old' : dataset.clique,\n            };\n\n            // build the context menu\n            let menu = $ ('<table class=\"contextmenu\"></table>');\n            menu.append ($ (\n                tools.format (\n                    '<tr class=\"ui-state-disabled\">' +\n                        '<td class=\"bg_labez\" data-labez=\"{labez_old}\"></td>' +\n                        '<td>{labez_old}{clique_old}</td>' +\n                        '</tr>',\n                    data\n                )\n            ));\n            menu.append ($ ('<tr><td>-</td><td>-</td></tr>'));\n\n            // Split a clique\n\n            data.action = 'split';\n            data.msg = 'Split ' + data.labez_old + data.clique_old;\n            data.labez_new  = '?';\n            data.clique_new = '0';\n            data.labez_bg   = dataset.labez;\n            menu.append (trow (data));\n            menu.append ($ ('<tr><td>-</td><td>-</td></tr>'));\n\n            // Merge two cliques\n\n            let cliques = _.filter (json.data, function (o) { return o[0][0] !== 'z'; });\n            cliques = cliques.concat ([['*', '0', '*'], ['?', '0', '?']]);\n            _.forEach (cliques, function (value) {\n                data.labez_new  = value[0];\n                data.clique_new = value[1];\n                data.labez_bg   = value[0];\n\n                if ((data.labez_new === data.labez_old) && (data.clique_old !== data.clique_new)) {\n                    data.action = 'merge';\n                    data.msg    = 'Merge into ' + data.labez_new + data.clique_new;\n                    menu.append (trow (data));\n                }\n            });\n            menu.append ($ ('<tr><td>-</td><td>-</td></tr>'));\n\n            // Reassign Source of clique\n\n            _.forEach (cliques, function (value) {\n                data.labez_new  = value[0];\n                data.clique_new = value[1];\n                data.labez_bg   = value[0];\n\n                if (data.labez_new !== data.labez_old) {\n                    data.action = 'move';\n                    data.msg    = 'Set Source to ' + data.labez_new + data.clique_new;\n                    menu.append (trow (data));\n                }\n            });\n\n            // Display the menu\n\n            menu.menu ({\n                'select' : function (event2, ui) {\n                    let tr = ui.item[0];\n\n                    // console.log ('Selected: ' + $ (tr).text ());\n\n                    let xhr2 = $.getJSON ('stemma-edit/' + passage.pass_id, tr.dataset);\n                    xhr2.done (function (json2) {\n                        // stemma-edit returns the changed passage\n                        $ (document).trigger ('ntg.panel.reload', json2.data);\n                    });\n                    xhr2.fail (function (xhrobj) {\n                        tools.xhr_alert (xhrobj, event.data.$wrapper);\n                    });\n                    menu.fadeOut (function () { menu.remove (); });\n                },\n            });\n            tools.svg_contextmenu (menu, event.target);\n        });\n    }\n\n    /**\n     * Load a new passage.\n     *\n     * @function load_passage\n     *\n     * @param {Object} passage - Which passage to load.\n     *\n     * @return {Promise} Promise, resolved when the new passage has loaded.\n     */\n    function load_passage (passage) {\n        let instance = this;\n        instance.passage = passage;\n\n        const params = ['width', 'fontsize'];\n\n        // provide a width and fontsize for GraphViz to format the graph\n        instance.data.width = instance.$wrapper.width ();                            // in px\n        instance.data.fontsize = parseFloat (instance.$wrapper.css ('font-size'));   // in px\n\n        let url = 'stemma.dot/' + passage.pass_id + '?' + $.param (_.pick (instance.data, params));\n        let png_url = 'stemma.png/' + passage.pass_id + '?' + $.param (_.pick (instance.data, params));\n\n        let name = $.trim (instance.$panel.find ('.panel-caption').text ());\n        instance.$toolbar.find ('a[name=\"dot\"]').attr ('href', url).attr ('download', name + '.dot');\n        instance.$toolbar.find ('a[name=\"png\"]').attr ('href', png_url);\n\n        let xhr = instance.graph.load_dot (url);\n        xhr.done (() => {\n            instance.$panel.animate ({ 'width' : (instance.graph.bbox.width + 20) + 'px' });\n\n            if (is_editor) {\n                // Drag a node.\n                d3.selectAll ('div.panel-local-stemma g.node.draggable')\n                    .call (dragListener (instance));\n                d3.selectAll ('div.panel-local-stemma g.node.droptarget')\n                    .on ('mouseover', function (dummy_d) {\n                        if (dragged_node && d3.select (this) !== dragged_node) {\n                            target_node = d3.select (this);\n                            highlight (target_node, true);\n                        }\n                    })\n                    .on ('mouseout', function (dummy_d) {\n                        if (dragged_node && d3.select (this) !== dragged_node) {\n                            highlight (target_node, false);\n                            target_node = null;\n                        }\n                    });\n            }\n        });\n        changed ();\n        return xhr;\n    }\n\n    /**\n     * Initialize the module.\n     *\n     * @function init\n     *\n     * @param {Object} instance     - The panel module instance to inherit from.\n     * @param {Object} graph_module - The graph module to use.\n     * @param {string} id_prefix    - The prefix to use for all generated ids.\n     *\n     * @returns {Object} - The module instance object.\n     */\n    function init (instance, graph_module, id_prefix) {\n        instance.load_passage = load_passage;\n        $.extend (instance.data, {});\n        instance.$wrapper = instance.$panel.find ('.panel-content');\n        instance.graph = graph_module.init (instance.$wrapper, id_prefix);\n\n        if (is_editor) {\n            instance.$panel.on ('contextmenu', 'g.node.draggable', instance, open_contextmenu);\n        }\n\n        return instance;\n    }\n\n    return {\n        'init' : init,\n    };\n});\n"]}