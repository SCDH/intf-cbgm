{"version":3,"sources":["../../es6/d3-common.es6"],"names":[],"mappings":"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","file":"d3-common.js","sourcesContent":["/**\n * This module contains common functions built around the D3 library.\n *\n * @module d3-common\n * @author Marcello Perathoner\n */\n\ndefine ([\n    'jquery',\n    'd3',\n    'lodash',\n    'pegjs',\n    'text!/static/js/dot-grammar.pegjs',\n],\n\nfunction ($, d3, _, peg, parser_src) {\n    var dot_parser = peg.generate (parser_src);\n\n    /**\n     * Conversion factor from standard .dot resolution to standard css resolution.\n     *\n     * Why 96? See: https://www.w3.org/TR/css3-values/#reference-pixel\n     *\n     * Why 72? All output of GraphViz assumes 72 dpi regardless of the value of\n     * the 'dpi' field.  The 'dpi' field is used only for bitmap and svg output.\n     *\n     * @var {float} dot2css\n     */\n    var dot2css = 96.0 / 72.0;\n\n    /* A color palette for labez. */\n    var Labez =\n        '8888881f77b42ca02cd62728e7ba52ff7f0e9467bd8c564be377c217becf' +\n        'aec7e8ffbb7898df8aff9896c5b0d5c49c94f7b6d2dbdb8d9edae57f7f7f';\n\n    /* A color palette for cliques.  Pilfered from d3-scale-chromatic.js */\n    var Greys = 'fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000';\n\n    /**\n     * Convert a string of hex RGB to a D3 scale.\n     *\n     * @function color_string_to_palette\n     *\n     * @param {string} s - The color palette as string\n     *\n     * @returns {Object} The color palette as D3 scale.\n     */\n\n    function color_string_to_palette (s) {\n        var no_of_colors = s.length / 6;\n        var range = s.match (/.{6}/g).map (x => '#' + x);\n        return d3.scaleOrdinal (range).domain (d3.range (no_of_colors));\n    }\n\n    /**\n     * A D3 color palette suitable for attestations.\n     *\n     * @var {d3.scale} labez_palette\n     */\n    var labez_palette = color_string_to_palette (Labez);\n\n    /**\n     * A D3 color palette suitable for cliques.\n     *\n     * @var {d3.scale} cliques_palette\n     */\n    var cliques_palette = color_string_to_palette (Greys);\n\n    /**\n     * Generates a CSS color palette from a D3 scale.\n     *\n     * @function generate_css_palette\n     *\n     * @param {d3.scale} labez_scale  - The color palette for labez as D3 scale.\n     * @param {d3.scale} clique_scale - The color palette for cliques as D3 scale.\n     *\n     * @return {string} - The color palette as CSS\n     */\n    function generate_css_palette (labez_scale, clique_scale) {\n        var style;\n        function labezFromCharCode (code) {\n            return code > 0 ? String.fromCharCode (code + 96) : 'zz';\n        }\n\n        /* colors for labez */\n\n        style = _.map (_.zip (labez_scale.domain (), labez_scale.range ()), function (pair) {\n            var code = labezFromCharCode (pair[0]);\n            return (\n                '.fg_labez[data-labez=\"' + code + '\"] {\\n' +\n                '    color: ' + pair[1] + ' !important;\\n' +\n                '    stroke: ' + pair[1] + ';\\n' +\n                '}\\n' +\n                '.bg_labez[data-labez=\"' + code + '\"] {\\n' +\n                '    background-color: ' + pair[1] + ' !important;\\n' +\n                '    fill: ' + pair[1] + ';\\n' +\n                '}'\n            );\n        });\n        style.unshift ('.fg_labez[data-labez] { color: grey !important; stroke: grey; }');\n        style.unshift ('.bg_labez[data-labez] { background-color: grey !important; fill: grey; }');\n        style.unshift ('.fg_labez { color: black !important; stroke: black; }');\n        style.unshift ('.bg_labez { background-color: black !important; fill: black; }');\n\n        /* colors for cliques */\n\n        style = style.concat (_.map (_.zip (clique_scale.domain (), clique_scale.range ()), function (pair) {\n            var code = pair[0];\n            return (\n                '.fg_clique[data-clique=\"' + code + '\"] {\\n' +\n                '    color: ' + pair[1] + ' !important;\\n' +\n                '    stroke: ' + pair[1] + ';\\n' +\n                '}\\n' +\n                '.bg_clique[data-clique=\"' + code + '\"] {\\n' +\n                '    background-color: ' + pair[1] + ' !important;\\n' +\n                '    fill: ' + pair[1] + ';\\n' +\n                '}'\n            );\n        }));\n\n        return style.join ('\\n');\n    }\n\n    /**\n     * Insert a CSS color palette into the DOM making it active.\n     *\n     * @function insert_css_palette\n     *\n     * @param {string} css - The color palette as CSS.\n     */\n    function insert_css_palette (css) {\n        $ ('<style type=\"text/css\">' + css + '</style>').appendTo ('head');\n    }\n\n    /**\n     * Convert a D3 selection object into a jQuery selection object.\n     *\n     * @function to_jquery\n     *\n     * @param {d3.selection} d3_selection - The D3 selection object\n     *\n     * @return {jQuery.selection} - The jQuery selection object.\n     *\n     * @see http://collaboradev.com/2014/03/18/d3-and-jquery-interoperability/\n     */\n    function to_jquery (d3_selection) {\n        return $ (d3_selection.nodes ());\n    }\n\n    /**\n     * Convert a jQuery selection object into a D3 selection object.\n     *\n     * @function to_d3\n     *\n     * @param {jQuery.selection} jquery_selection - The jQuery selection object\n     *\n     * @return {D3.selection} - The D3 selection object.\n     */\n    function to_d3 (jquery_selection) {\n        return d3.selectAll (jquery_selection.toArray ());\n    }\n\n    /**\n     * Append a triangular marker def to the SVG.\n     *\n     * @function append_marker\n     *\n     * @param {jQuery.selection|d3.selection} svg - The SVG element.\n     * @param {string} id_prefix                  - The id prefix.\n     */\n    function append_marker (svg, id_prefix) {\n        svg\n            .append ('defs')\n            .append ('marker')\n            .attr ('id',           id_prefix + 'triangle')\n            .attr ('viewBox',      '0 0 10 10')\n            .attr ('refX',         '10')\n            .attr ('refY',         '5')\n            .attr ('markerUnits',  'strokeWidth')\n            .attr ('markerWidth',  '4')\n            .attr ('markerHeight', '3')\n            .attr ('orient',       'auto')\n            .attr ('class',        'link')\n            .append ('path')\n            .attr ('d', 'M 0 0 L 10 5 L 0 10 z');\n    }\n\n    /**\n     * Parse point coordinates from .dot format.\n     *\n     * @function parse_pt\n     *\n     * @param {string} commasep - The pt as comma-separated values.\n     *\n     * @return {Object} The point as dictionary { x, y }\n     */\n    function parse_pt (commasep) {\n        var pt = commasep.split (',');\n        if (pt[0] === 's' || pt[0] === 'e') {\n            // remove start, end marker\n            pt = pt.slice (1);\n        }\n        return {\n            'x' : parseFloat (pt[0]) * dot2css,\n            'y' : parseFloat (pt[1]) * -dot2css,\n        };\n    }\n\n    /**\n     * Parse bounding box coordinates from .dot format.\n     *\n     * From the .dot format docs: rect: \"%f,%f,%f,%f\" The rectangle\n     * llx,lly,urx,ury gives the coordinates, in points, of the lower-left\n     * corner \\(llx,lly\\) and the upper-right corner \\(urx,ury\\).\n     *\n     * @function parse_bbox\n     *\n     * @param {string} commasep - The bbox as comma-separated values.\n     *\n     * @return {Object} The bbox as dictionary { x, y, width, height }\n     */\n    function parse_bbox (commasep) {\n        var bb = commasep.split (',');\n        var llx = parseFloat (bb[0]) * dot2css;\n        var lly = parseFloat (bb[1]) * dot2css;\n        var urx = parseFloat (bb[2]) * dot2css;\n        var ury = parseFloat (bb[3]) * dot2css;\n        return {\n            'x'      : llx,\n            'y'      : -ury,\n            'width'  : urx - llx,\n            'height' : ury - lly,\n        };\n    }\n\n    /**\n     * Parse edge path .dot format.\n     *\n     * @function parse_path\n     *\n     * @param {string} path - The path in .dot format\n     *\n     * @return {Array} The path as array of objects  { x, y }\n     */\n    function parse_path (path) {\n        path = $.trim (path.replace ('\\\\\\n', ''));\n        return _.map (path.split (/\\s+/), function (point) {\n            return parse_pt (point);\n        });\n    }\n\n    /**\n     * Parse edge path .dot format.\n     *\n     * @function parse_path_svg\n     *\n     * @param {string} path - The path in .dot format\n     *\n     * @return {string} The path as 'Mx,y Cx,y x,y x,y ...'\n     */\n\n    function parse_path_svg (path) {\n        var ppath = parse_path (path);\n        var prefix = 'M';\n        var suffix = '';\n\n        if (/e,/.test (path)) {\n            suffix = 'L' + ppath[0].x + ',' + ppath[0].y;\n            ppath = ppath.slice (1);\n        }\n        if (/s,/.test (path)) {\n            prefix += ppath[0].x + ',' + ppath[0].y + 'L';\n            ppath = ppath.slice (1);\n        }\n        prefix += ppath[0].x + ',' + ppath[0].y + 'C';\n        ppath = ppath.slice (1);\n\n        return prefix + _.map (ppath, function (pt) {\n            return pt.x + ',' + pt.y;\n        }).join (' ') + suffix;\n    }\n\n    /**\n     * Inflate a bbox.\n     *\n     * @function inflate_bbox\n     *\n     * @param {Object} bbox - The bbox as dictionary of x, y, width, height\n     * @param {float}  len  - The bbox will be twice this wider and taller.\n     *\n     * @return {Object} The bbox as dictionary of x, y, width, height\n     */\n    function inflate_bbox (bbox, len) {\n        return {\n            'x'      : bbox.x - len,\n            'y'      : bbox.y - len,\n            'width'  : bbox.width  + (2 * len),\n            'height' : bbox.height + (2 * len),\n        };\n    }\n\n    /**\n     * Parse a .dot file into lists of subgraphs, nodes, edges, and graph attributes.\n     *\n     * @function dot\n     *\n     * @param {string} url        - The url\n     * @param {function} callback - The callback function.\n     *\n     * @return {Promise}\n     */\n    function dot (url, callback) {\n        return $.get (url, function (data) {\n            var graph = dot_parser.parse (data);\n            var stmts = graph[0].stmts;\n\n            var attrs     = _.keyBy (_.filter (stmts, function (o) { return o.type === 'attr';     }), 'attrType');\n            var subgraphs = _.keyBy (_.filter (stmts, function (o) { return o.type === 'subgraph'; }), 'id');\n            var nodes     = _.keyBy (_.filter (stmts, function (o) { return o.type === 'node';     }), 'id');\n            var edges     =          _.filter (stmts, function (o) { return o.type === 'edge';     });\n\n            attrs.graph.attrs.bbox = parse_bbox (attrs.graph.attrs.bb);\n\n            callback ({\n                'subgraphs' : subgraphs,\n                'nodes'     : nodes,\n                'edges'     : edges,\n                'attrs'     : attrs,\n            });\n        });\n    }\n\n    /**\n     * Breadth first search in graph\n     *\n     * @function bfs\n     *\n     * @param {Object} edges - The edges list\n     * @param {string} start - The start node id\n     *\n     * @return A list of node ids in breadth-first order\n     */\n\n    function bfs (edges, start) {\n        var ids   = [start];\n        var queue = [];\n        var cur   = start;\n        function is_adjacent (edge) {\n            return edge.elems[0].id === cur;\n        }\n        while (cur) {\n            _.forEach (_.filter (edges, is_adjacent), function (n) {\n                var id = n.elems[1].id;\n                if (_.indexOf (ids, id) === -1) {\n                    ids.push (id);\n                    queue.push (id);\n                }\n            });\n            cur = queue.shift ();\n        }\n        return ids;\n    }\n\n    return {\n        'append_marker'        : append_marker,\n        'bfs'                  : bfs,\n        'cliques_palette'      : cliques_palette,\n        'dot'                  : dot,\n        'generate_css_palette' : generate_css_palette,\n        'inflate_bbox'         : inflate_bbox,\n        'insert_css_palette'   : insert_css_palette,\n        'labez_palette'        : labez_palette,\n        'parse_bbox'           : parse_bbox,\n        'parse_path'           : parse_path,\n        'parse_path_svg'       : parse_path_svg,\n        'parse_pt'             : parse_pt,\n        'to_d3'                : to_d3,\n        'to_jquery'            : to_jquery,\n    };\n});\n"]}