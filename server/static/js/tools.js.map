{"version":3,"sources":["../../es6/tools.es6"],"names":[],"mappings":";;AAAA;;;;;;;;AAQA,OAAQ,EAAR,EAGA,YAAY;AACR;;;;;;;;;;;AAWA,aAAS,MAAT,CAAiB,CAAjB,EAAoB,IAApB,EAA0B;AACtB,eAAO,EAAE,OAAF,CAAW,uBAAX,EAAoC,UAAC,KAAD,EAAQ,EAAR;AAAA,mBAAe,KAAK,EAAL,CAAf;AAAA,SAApC,CAAP;AACH;;AAED;;;;;;;;;;;;;AAaA,aAAS,YAAT,CAAuB,CAAvB,EAA0B;AACtB,eAAO,EAAE,OAAF,CAAW,MAAX,EAAmB,UAAC,KAAD,EAAQ,YAAR,EAAsB,YAAtB;AAAA,mBAAuC,MAAM,MAAN,GAAe,KAAtD;AAAA,SAAnB,CAAP;AACH;;AAED;;;;;;;;AAQA,aAAS,gBAAT,GAA6B;AACzB,YAAI,QAAQ,EAAZ;AACA,iBAAS,MAAT,CAAgB,MAAhB,CAAwB,CAAxB,EAA2B,KAA3B,CAAkC,GAAlC,EAAuC,OAAvC,CAAgD,UAAU,IAAV,EAAgB;AAC5D,gBAAI,IAAI,KAAK,KAAL,CAAY,GAAZ,CAAR;AACA,kBAAM,EAAE,CAAF,CAAN,IAAc,EAAE,CAAF,CAAd;AACH,SAHD;AAIA,eAAO,KAAP;AACH;;AAED;;;;;;;;;;AAUA,aAAS,eAAT,CAA0B,IAA1B,EAAgC,MAAhC,EAAwC;AACpC,UAAG,MAAH,EAAW,OAAX,CAAoB,WAApB,EAAiC,MAAjC,CAAyC,IAAzC;;AAEA,YAAI,OAAO,OAAO,qBAAP,EAAX;AACA,YAAI,WAAW,SAAS,IAAT,CAAc,qBAAd,EAAf,CAJoC,CAImB;AACvD,YAAI,KAAK,IAAI,EAAE,KAAN,CAAa,OAAb,CAAT;AACA,WAAG,KAAH,GAAW,KAAK,GAAL,GAAa,SAAS,GAAjC;AACA,WAAG,KAAH,GAAW,KAAK,KAAL,GAAa,SAAS,IAAjC;AACA,aAAK,QAAL,CAAe;AACX,kBAAc,UADH;AAEX,yBAAc,cAFH;AAGX,kBAAc;AAHH,SAAf;AAKH;;AAED;;;;;;;;;;AAUA,aAAS,SAAT,CAAoB,GAApB,EAAyB,MAAzB,EAAiC;AAC7B,YAAI,CAAC,MAAL,EAAa;AACT,qBAAS,EAAG,MAAH,CAAT;AACH;AACD,YAAI,WAAW,QAAf;;AAEA,YAAI,IAAI,YAAR,EAAsB;AAClB,gBAAI,SAAS,iDACiB,QADjB,4PAIH,IAAI,YAAJ,CAAiB,OAJd,iDAAb;AAOA,mBAAO,QAAP,CAAiB,MAAjB,EAAyB,IAAzB;AACA,mBAAO,EAAP,CAAW,OAAX,EAAoB,8BAApB,EAAoD,YAAY;AAC5D,uBAAO,IAAP,CAAa,IAAb,EAAmB,IAAnB,EAAyB,OAAzB,CAAkC,YAAY;AAAE,2BAAO,MAAP;AAAmB,iBAAnE;AACH,aAFD;AAGA,mBAAO,SAAP,GAAoB,KAApB,CAA2B,IAA3B,EAAiC,OAAjC;AACH;AACJ;;AAED,aAAS,IAAT,GAAiB,CAChB;;AAED,WAAO;AACH,kBAAqB,MADlB;AAEH,wBAAqB,YAFlB;AAGH,4BAAqB,gBAHlB;AAIH,gBAAqB,IAJlB;AAKH,2BAAqB,eALlB;AAMH,qBAAqB;AANlB,KAAP;AAQH,CAzHD","file":"tools.js","sourcesContent":["/**\n * This module implements helper functions and is a container for all stuiff\n * that doesn't fit elsewhere.\n *\n * @module tools\n * @author Marcello Perathoner\n */\n\ndefine ([\n],\n\nfunction () {\n    /**\n     * Format a string in python fashion.  \"{count} items found\"\n     *\n     * @function format\n     *\n     * @param {string} s  - The string to format\n     * @param {dict} data - A dictionary of key: value\n     *\n     * @return {string} - The formatted string\n     */\n\n    function format (s, data) {\n        return s.replace (/\\{([_\\w][_\\w\\d]*)\\}/gm, (match, p1) => data[p1]);\n    }\n\n    /**\n     * Transform a string so that numbers in the string sort naturally.\n     *\n     * Transform any contiguous run of digits so that it sorts\n     * naturally during an alphabetical sort. Every run of digits gets\n     * the length of the run prepended, eg. 123 => 3123, 123456 =>\n     * 6123456.\n     *\n     * @param {string} s - The input string\n     *\n     * @return {string} - The transformed string\n     */\n\n    function natural_sort (s) {\n        return s.replace (/\\d+/g, (match, dummy_offset, dummy_string) => match.length + match);\n    }\n\n    /**\n     * Return a map of the query parameters in the url of this page.\n     *\n     * @function get_query_params\n     *\n     * @return {Oject} A map of parameter = value\n     */\n\n    function get_query_params () {\n        var query = {};\n        location.search.substr (1).split ('&').forEach (function (item) {\n            var s = item.split ('=');\n            query[s[0]] = s[1];\n        });\n        return query;\n    }\n\n    /**\n     * Position a context menu aside an svg element.\n     *\n     * Since jQuery doesn't grok the SVG DOM, we have to calculate the\n     * position of the menu manually.\n     *\n     * @param {Object} menu   - The menu\n     * @param {Object} target - The DOM object to attach the menu to\n     */\n\n    function svg_contextmenu (menu, target) {\n        $ (target).closest ('div.panel').append (menu);\n\n        var rect = target.getBoundingClientRect ();\n        var bodyRect = document.body.getBoundingClientRect (); // account for scrolling\n        var ev = new $.Event ('click');\n        ev.pageY = rect.top   - bodyRect.top;\n        ev.pageX = rect.right - bodyRect.left;\n        menu.position ({\n            'my'        : 'left top',\n            'collision' : 'flipfit flip',\n            'of'        : ev,\n        });\n    }\n\n    /**\n     * Display an auto-closing alert window.\n     *\n     * @param {Object} xhr - The server response containing the\n     *                          message.  The JSON response must\n     *                          contain an Object with a message\n     *                          field.\n     * @param {jQuery} $panel - The panel to append the window to.\n     */\n\n    function xhr_alert (xhr, $panel) {\n        if (!$panel) {\n            $panel = $ ('body');\n        }\n        var category = 'danger';\n\n        if (xhr.responseJSON) {\n            var $alert = $ (`\n                <div class=\"alert alert-${category} alert-dismissible alert-margins\" role=\"alert\">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\"\n                            aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                    ${xhr.responseJSON.message}\n                 </div>\n                `);\n            $alert.appendTo ($panel).hide ();\n            $alert.on ('click', 'button[data-dismiss=\"alert\"]', function () {\n                $alert.stop (true, true).slideUp (function () { $alert.remove (); });\n            });\n            $alert.slideDown ().delay (5000).slideUp ();\n        }\n    }\n\n    function init () {\n    }\n\n    return {\n        'format'           : format,\n        'natural_sort'     : natural_sort,\n        'get_query_params' : get_query_params,\n        'init'             : init,\n        'svg_contextmenu'  : svg_contextmenu,\n        'xhr_alert'        : xhr_alert,\n    };\n});\n"]}