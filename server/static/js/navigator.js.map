{"version":3,"sources":["../../es6/navigator.js"],"names":[],"mappings":"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","file":"navigator.js","sourcesContent":["/**\n * This module implements the tape-recorder-controls navigator.  It also keeps\n * track of the current passage for other modules to peek at.\n *\n * @module navigator\n * @author Marcello Perathoner\n */\n\ndefine ([\n    'jquery',\n    'lodash',\n    'urijs/URI',\n    'jquery-ui',\n    'css!navigator-css',\n],\n\nfunction ($, _, urijs) {\n    let module = {};\n\n    /*\n     * Extend the stock autocomplete to use a <table> instead of a <ul> and give\n     * it the bootstrap look.  Using a table we can display the passage id\n     * alongside the passage lemma.\n     */\n\n    $.widget ('custom.tableautocomplete', $.ui.autocomplete, {\n        '_renderMenu' : function (ul, items) {\n            this._super (ul, items);\n            ul.addClass ('dropdown-menu-table'); // give it the bootstrap look\n        },\n        '_renderItem' : (table, item) => {\n            let tr = $ ('<tr></tr>').data ('item.autocomplete', item);\n            tr.append ($ ('<td class=\"menu-label\">' + item.label + '</td>'));\n            if (_.has (item, 'description')) {\n                tr.append ($ ('<td class=\"menu-description\">' + item.description + '</td>'));\n            }\n            tr.appendTo (table);\n            return tr;\n        },\n    });\n\n    /**\n     * Set a new passage.  Programmatically set a new passage, eg. at page load.\n     *\n     * @function set_passage\n     *\n     * @param {int} pass_id - The new passage id\n     */\n    function set_passage (pass_id) {\n        $.getJSON ('passage.json/' + pass_id, (json) => {\n            module.passage = json.data;\n            $ (document).trigger ('ntg.panel.reload', [module.passage]);\n        });\n    }\n\n    /**\n     * Get a list of suggestions from the server\n     *\n     * @function suggest\n     *\n     * @param {Object} data - Request object with 'term' property, which refers\n     *                        to the value currently in the text input.\n     *\n     * @param {function} complete - The callback\n     *\n     * @see https://api.jqueryui.com/autocomplete/#option-source\n     */\n    function suggest (data, complete) {\n        let $elem = $ (this.element);\n\n        // collect values from all <input>s\n        let $inputs = $elem.closest ('form').find ('input[data-autocomplete]');\n        $inputs.each ((i, e) => {\n            let $e = $ (e);\n            data[$e.attr ('data-autocomplete')] = $e.val ();\n        });\n        // get the name of the current field\n        data.currentfield = $elem.attr ('data-autocomplete');\n\n        $.getJSON ('suggest.json', data, complete);\n    }\n\n    function get_leitzeile (current_pass_id, $div) {\n        $.getJSON ('leitzeile/' + current_pass_id, json => {\n            let accumulator = [[]];\n            let last_pass_id = null;\n            let i = 0;\n\n            // group by pass_id\n            for (let item of json.data.leitzeile) {\n                if (item.pass_id !== last_pass_id) {\n                    accumulator[++i] = [];\n                    last_pass_id = item.pass_id;\n                }\n                accumulator[i].push (item);\n            }\n\n            let leitzeile = [];\n            for (let items of accumulator) {\n                if (items.length === 0)\n                    continue;\n                let pass_id = items[0].pass_id;\n                let tmp = _.map (items, 'lemma').join (' ');\n                let classes = [];\n                if ((items[0].anfadr % 2) === 1) {\n                    classes.push ('leitzeile-insert');\n                    tmp = '';\n                } else {\n                    classes.push ((items.length > 1) ? 'leitzeile-many' : 'leitzeile-one');\n                }\n                if (items[0].spanned)\n                    classes.push ('leitzeile-spanned');\n                if (pass_id === current_pass_id)\n                    classes.push ('leitzeile-current');\n                let class_ = (classes.length) ? ` class=\"${classes.join (' ')}\"` : '';\n\n                if (pass_id) {\n                    leitzeile.push (`<a${class_} href=\"#${pass_id}\">${tmp}</a>`);\n                } else {\n                    leitzeile.push (`<span>${tmp}</span>`)\n                };\n            };\n\n            $div.html (leitzeile.join (' '));\n        });\n    }\n\n    /**\n     * Answer the user input on the navigator buttons.\n     *\n     * @function on_nav\n     *\n     * @param {Object} event - The event\n     *\n     * @return false\n     */\n    function on_nav (event) {\n        let $target = $ (event.currentTarget);\n        let $form   = $target.closest ('form');\n        let data    = { 'button' : $target.attr ('data') || 'Go' };\n\n        _.forEach ($form.serializeArray (), (value) => {\n            data[value.name] = value.value;\n        });\n\n        $.getJSON ('passage.json', data, (json) => {\n            module.passage = json.data;\n            window.location.hash = '#' + json.data.passage; // trigger the move to the new passage\n        });\n        return false;\n    }\n\n    /**\n     * Initialize the module.\n     *\n     * @function init\n     *\n     * @returns {Object} - The module object.\n     */\n    function init () {\n        // Tape recorder controls\n        $ ('form.passage-selector').on ('click', 'button', on_nav);\n        $ ('form.passage-selector').on ('submit', on_nav);\n\n        $ ('form input[data-autocomplete]').tableautocomplete ({\n            'source'    : suggest,\n            'minLength' : 0,\n            'position'  : { 'my' : 'left top', 'at' : 'left bottom+2', 'collision' : 'flipfit' },\n        })\n            .on ('click', function () {\n                $ (this).tableautocomplete ('search');\n            })\n            .on ('tableautocompletechange', function () {\n                // clear following inputs\n                $ (this).nextAll ('input').val ('');\n            })\n            .on ('tableautocompleteselect', function (event, dummy_ui) {\n                let $this = $ (this);\n                $this.nextAll ('input').val ('');\n                if ($this.attr ('data-autocomplete') === 'word') {\n                    // give the control a chance to update the <input> before we call on_nav ()\n                    window.setTimeout (() => {\n                        on_nav (event);\n                    });\n                }\n            });\n\n        $ (document).on ('ntg.panel.reload', (event, passage) => {\n            get_leitzeile (passage.pass_id, $ ('div.leitzeile'));\n            let $form = $ ('form.passage-selector');\n            $form.find ('input[name=\"pass_id\"]').val (passage.pass_id);\n\n            $ ('form input[data-autocomplete]').each ((i, e) => {\n                let $e = $ (e);\n                $e.val (passage[$e.attr ('data-autocomplete')]);\n            });\n            $ ('h1 span.passage').text (passage.hr);\n            $ ('title').text ($ ('h1').text ());\n\n            // Fix 'next page' parameter in login / logout links\n            let $links = $ ('a.user_login_link, a.user_logout_link');\n            $links.each ((i, e) => {\n                let $e = $ (e);\n                $e.attr ('href', urijs ($e.attr ('href')).query ({ 'next' : window.location }));\n            });\n        });\n\n        // User hit back-button, etc.\n        $ (window).on ('hashchange', () => {\n            set_passage (window.location.hash.substring (1));\n        });\n\n        return module;\n    }\n\n    module.init = init;\n    module.set_passage = set_passage;\n    /** JSON object.  Will be updated on navigation */\n    module.passage = null;\n\n    return module;\n});\n"]}