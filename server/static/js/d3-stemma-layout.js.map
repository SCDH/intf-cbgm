{"version":3,"sources":["../../es6/d3-stemma-layout.js"],"names":[],"mappings":"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","file":"d3-stemma-layout.js","sourcesContent":["/**\n * This module converts a graph in .dot format into SVG.  The .dot file must be\n * pre-processed in order to contain coordinates for each node and bezier paths\n * for each edge.\n *\n * @module d3-stemma-layout\n * @author Marcello Perathoner\n */\n\ndefine ([\n    'jquery',\n    'd3',\n    'd3-common',\n    'lodash',\n],\n\nfunction ($, d3, d3_common, _) {\n    /**\n     * Create an SVG graph from a dot file.\n     *\n     * @function load_dot\n     *\n     * @param {string} url - The url (must serve dot format).\n     *\n     * @returns {Promise} - A promise resolved when all SVG elements have been created.\n     */\n    function load_dot (url) {\n        let instance = this; // instance\n        // let dot_dpi = 72;\n        let css_dpi = 96;\n\n        let svg = instance.svg;\n        svg.selectAll ('g').transition ().duration (300).style ('opacity', 0.0)\n            .remove ();\n        let deferred = new $.Deferred ();\n\n        d3_common.dot (url, (graph) => {\n            // if we have subgraphs, retrieve their nodes too\n            _.forEach (graph.subgraphs, (subgraph) => {\n                let subgraph_nodes = _.keyBy (_.filter (subgraph.stmts,\n                    o => o.type === 'node'), 'id');\n                _.assign (graph.nodes, subgraph_nodes); // copy\n                subgraph.attrs = _.keyBy (_.filter (subgraph.stmts,\n                    o => o.type === 'attr'), 'attrType');\n                subgraph.attrs.graph.attrs.bbox = d3_common.parse_bbox (subgraph.attrs.graph.attrs.bb);\n                subgraph.attrs.graph.attrs.lp   = d3_common.parse_pt   (subgraph.attrs.graph.attrs.lp);\n            });\n\n            // shrinkwrap + accomodate for the thick borders of circles\n            instance.bbox = d3_common.inflate_bbox (graph.attrs.graph.attrs.bbox, 3);\n\n            instance.edges = graph.edges;\n\n            let node_width  = graph.attrs.node.attrs.width;     // in inches\n            let node_height = graph.attrs.node.attrs.height;    // in inches\n            let font_size   = graph.attrs.graph.attrs.fontsize; // in points\n\n            svg.style ('opacity', 0.0);\n            svg.style ('font-size', font_size + 'pt');\n\n            svg.transition ('svg')\n                .duration (300)\n                .attr ('height', instance.bbox.height)\n                .attr ('width',  instance.bbox.width)\n                .transition ()\n                .duration (300)\n                .style ('opacity', 1.0);\n\n            // put id also inside node attrs\n            _.forEach (graph.nodes, (v, k) => { v.attrs.id = k; });\n\n            // give all links an id\n            _.forEach (graph.edges, (link, i) => {\n                link.id = instance.id_prefix + 'link_' + i;\n            });\n\n            let g = svg.append ('g')\n                // shift a little bit to avoid 'shaving' nodes at the view boundary\n                .attr ('transform', 'translate(' + -instance.bbox.x + ',' + -instance.bbox.y + ')');\n\n            // draw the subgraphs: a rectangle with a label\n\n            let sg = g.append ('g')\n                .attr ('class', 'subgraphs');\n\n            let subgraph = sg.selectAll ('.subgraph')\n                .data (_.map (graph.subgraphs, 'attrs.graph.attrs'))\n                .enter ();\n\n            subgraph.append ('rect')\n                .attr ('x',      d => d.bbox.x)\n                .attr ('y',      d => d.bbox.y)\n                .attr ('width',  d => d.bbox.width)\n                .attr ('height', d => d.bbox.height)\n                .attr ('class',  d => 'subgraph' + (/rounded/.test (d.style) ? ' rounded' : ''));\n\n            subgraph.append ('text')\n                .attr ('class', 'subgraph')\n                // lp indicates the center of the label\n                .attr ('x', d => d.lp.x)\n                .attr ('y', d => d.lp.y)\n                .style ('font-size', d => (d.fontsize || font_size) + 'pt')\n                .text (d => d.label);\n\n            // draw the links: a path and a text\n\n            let lg = g.append ('g').attr ('class', 'links');\n\n            let link = lg.selectAll ('.link')\n                .data (graph.edges)\n                .enter ();\n\n            link.filter (d => d.attrs && d.attrs.head_lp)\n                .each ((d) => {\n                    d.attrs.head_lp = d3_common.parse_pt (d.attrs.head_lp);\n                });\n\n            link.append ('path')\n                .attr ('id', d => d.id)\n                .attr ('data-labez', d => graph.nodes[d.elems[0].id].attrs.labez)\n                .attr ('class', d => {\n                    return 'link fg_labez ' +\n                        instance.id_prefix + 'sid-' + d.elems[0].id + ' ' +\n                        instance.id_prefix + 'tid-' + d.elems[1].id +\n                        (/dashed/.test (d.attrs.style) ? ' dashed' : '');\n                })\n                .attr ('marker-end', 'url(#' + instance.id_prefix + 'triangle)')\n                .attr ('d', d => d3_common.parse_path_svg (d.attrs.pos));\n\n            link.filter (d => d.attrs && d.attrs.head_lp && d.attrs.headlabel)\n                .append ('text')\n                .attr ('data-labez', d => graph.nodes[d.elems[0].id].attrs.labez)\n                .attr ('class', (d) => {\n                    return 'link bg_labez ' +\n                        instance.id_prefix + 'sid-' + d.elems[0].id + ' ' +\n                        instance.id_prefix + 'tid-' + d.elems[1].id;\n                })\n                .attr ('x', d => d.attrs.head_lp.x)\n                .attr ('y', d => d.attrs.head_lp.y)\n                .text (d => d.attrs.headlabel);\n\n            // draw the nodes: a circle and a text in a group\n\n            let ng = g.append ('g').attr ('class', 'nodes');\n\n            let node = ng.selectAll ('g.node')\n                .data (_.map (graph.nodes, 'attrs'))\n                .enter ();\n\n            node.filter (d => d.pos)\n                .each (d => { d.pos = d3_common.parse_pt (d.pos); });\n\n            let groups = node.append ('g')\n                .attr ('data-ms-id',     d => d.ms_id)\n                .attr ('data-label',     d => d.label ? d.label : d.id)\n                .attr ('class', d => {\n                    return 'node node-'\n                        + (d.children   ? 'internal' : 'leaf')\n                        + (d.clickable  ? ' clickable' : '')\n                        + (d.draggable  ? ' draggable' : '')\n                        + (d.droptarget ? ' droptarget' : '');\n                })\n                .attr ('transform', d => 'translate(' + d.pos.x + ',' + d.pos.y + ')');\n\n            let valid = new RegExp ('^[-_A-Za-z0-9]+$');\n\n            groups.append ('ellipse')\n                .attr ('class', 'node fg_labez bg_clique')\n                .attr ('data-labez',        d => d.labez)\n                .attr ('data-clique',       d => d.clique)\n                .attr ('data-labez-clique', d => d.labez_clique)\n                .attr ('rx', d => (d.width  || node_width)  * css_dpi / 2)\n                .attr ('ry', d => (d.height || node_height) * css_dpi / 2)\n                .on ('mouseenter', (d) => {\n                    if (valid.test (d.id)) {\n                        d3.selectAll ('.link.' + instance.id_prefix + 'sid-' + d.id).classed ('hover hi-source', true);\n                        d3.selectAll ('.link.' + instance.id_prefix + 'tid-' + d.id).classed ('hover hi-target', true);\n                    }\n                })\n                .on ('mouseleave', (d) => {\n                    if (valid.test (d.id)) {\n                        d3.selectAll ('.link.' + instance.id_prefix + 'sid-' + d.id).classed ('hover hi-source', false);\n                        d3.selectAll ('.link.' + instance.id_prefix + 'tid-' + d.id).classed ('hover hi-target', false);\n                    }\n                });\n\n            groups.append ('text')\n                .attr ('class', 'node')\n                .text (d => d.label ? d.label : d.id);\n\n            // done\n\n            deferred.resolve ();\n        });\n        return deferred.promise ();\n    }\n\n    /**\n     * Initialize the module.\n     *\n     * @function init\n     *\n     * @param {jQuery} $wrapper - A jQuery selector that points to\n     * the element inside of which the graph will be placed.\n     *\n     * @param {string} id_prefix - The prefix to add to all ids.  Use if you have\n     * more than one graph on a page.\n     *\n     * @returns {Graph} - A graph instance.\n     */\n    function init ($wrapper, id_prefix) {\n        let svg = d3.select ($wrapper.get (0)).append ('svg');\n\n        d3_common.append_marker (svg, id_prefix);\n\n        return {\n            'id_prefix' : id_prefix,\n            'wrapper'   : $wrapper,\n            'svg'       : svg,\n            'load_dot'  : load_dot,\n            'bbox'      : null,\n        };\n    }\n\n    return {\n        'init' : init,\n    };\n});\n"]}