{"version":3,"sources":["../../es6/apparatus.js"],"names":[],"mappings":"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","file":"apparatus.js","sourcesContent":["/**\n * This module displays the apparatus table.  It retrieves the apparatus data in\n * JSON format and builds a list of readings and of the manuscripts that attest\n * that reading.\n *\n * @module apparatus\n * @author Marcello Perathoner\n */\n\ndefine ([\n    'jquery',\n    'lodash',\n    'tools',\n    'toolbar',\n    'css!apparatus-css',\n],\n\nfunction ($, _, tools, toolbar) {\n    function changed () {\n        // currently unused\n        $ (document).trigger ('ntg.apparatus.changed');\n    }\n\n    /**\n     * Load a new passage.\n     *\n     * @function load_passage\n     *\n     * @param {Object} passage - Which passage to load.\n     *\n     * @return {Promise} Promise, resolved when the new passage has loaded.\n     */\n    function load_passage (passage) {\n        let instance = this;\n        instance.data.passage = passage;\n        let new_list;\n\n        let xhr = $.getJSON ('apparatus.json/' + passage.pass_id);\n        xhr.done ((json) => {\n            let labez_grouper  = (g) => g.labez;\n            let clique_grouper = (g) => g.labez_clique;\n\n            let grouper = _.includes (instance.data.cliques, 'cliques') ? clique_grouper : labez_grouper;\n\n            let readings = [];\n            let html = [];\n\n            // load readings into dictionary for faster lookup\n            _.forEach (json.data.readings, (reading) => {\n                readings[reading.labez] = reading.lesart;\n            });\n\n            // group manuscripts and loop over groups\n            _.forEach (_.groupBy (_.sortBy (json.data.manuscripts, grouper), grouper), (group) => {\n                let data = {\n                    'pass_id'      : passage.pass_id,\n                    'labez'        : group[0].labez,\n                    'labez_clique' : group[0].labez_clique,\n                    'group'        : grouper (group[0]),\n                };\n\n                data.reading = _.get (readings, data.labez, 'Error: no reading found');\n\n                html.push ('<li class=\"list-group-item\">');\n                html.push ('<h4 class=\"list-group-item-heading\">');\n                html.push (tools.format (\n                    '<a data-labez=\"{labez}\" class=\"apparatus-labez fg_labez\">{group} {reading}</a></h4>', data\n                ));\n\n                html.push ('<ul class=\"list-group-item-text attesting-mss list-inline\">');\n                _.forEach (_.sortBy (group, ['hsnr']), (item) => {\n                    let data2 = {\n                        'ms_id'     : item.ms_id,\n                        'hs'        : item.hs,\n                        'certainty' : (item.certainty === 1.0) ? '' : '?',\n                    };\n                    html.push (tools.format (\n                        '<li><a class=\"ms\" data-ms-id=\"{ms_id}\">{hs}{certainty}.</a></li>', data2));\n                });\n                html.push ('</ul>');\n                html.push ('</li>');\n            });\n            new_list = $ (html.join (''));\n        });\n\n        let faded_promise = instance.$wrapper.animate ({ 'opacity' : 0.0 }, 300);\n\n        return $.when (xhr, faded_promise).done (() => {\n            let $wrapper = instance.$wrapper;\n            let old_height = $wrapper.prop ('scrollHeight');\n            $wrapper.html (new_list);\n            let new_height = $wrapper.prop ('scrollHeight');\n            $wrapper.height (old_height);\n            $wrapper.animate ({ 'height' : new_height }, 300, () => {\n                $wrapper.height ('auto');\n                $wrapper.animate ({ 'opacity' : 1.0 }, 300);\n            });\n            toolbar.set_toolbar_buttons (instance.$toolbar, instance.data);\n            changed ();\n        });\n    }\n\n    /**\n     * Show the attestation in the Coherence panel and scroll to it.\n     *\n     * @function goto_attestation\n     *\n     * @param {Object} event - The event\n     */\n\n    function goto_attestation (event) {\n        event.stopPropagation ();\n\n        let instance = window.coherence.ltextflow;\n        let labez = $ (event.currentTarget).attr ('data-labez');\n        instance.data.labez = labez;\n        instance.load_passage (instance.data.passage);\n\n        $ ('html, body').animate ({\n            'scrollTop' : $ ('div.panel-local-textflow').offset ().top,\n        }, 500);\n    }\n\n    /**\n     * Initialize the module.\n     *\n     * @function init\n     *\n     * @param {Object} instance - The panel module instance to inherit from.\n     *\n     * @returns {Object} - The module instance object.\n     */\n    function init (instance) {\n        instance.load_passage = load_passage;\n        instance.$wrapper = instance.$panel.find ('.panel-content');\n        $.extend (instance.data, {\n            'passage' : null,\n            /* Show readings or cliques. */\n            'cliques' : [],\n        });\n\n        // Click on attestation\n        $ (document).on ('click', 'a.apparatus-labez', goto_attestation);\n\n        return instance;\n    }\n\n    return {\n        'init' : init,\n    };\n});\n"]}